{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"p",
				"padding-bottom"
			],
			[
				"b",
				"background-image"
			],
			[
				"min",
				"min-width"
			],
			[
				"co",
				"color"
			],
			[
				"ba",
				"background-color"
			],
			[
				"fon",
				"font-size"
			],
			[
				"di",
				"display"
			],
			[
				"w",
				"width"
			],
			[
				"heigh",
				"height"
			],
			[
				"lo",
				"log"
			],
			[
				"con",
				"console"
			],
			[
				"fu",
				"function"
			],
			[
				"g",
				"gotoStateCtrl"
			],
			[
				"ion",
				"ion-nav-bar"
			]
		]
	},
	"buffers":
	[
		{
			"file": "www/templates/menu.html",
			"settings":
			{
				"buffer_size": 2826,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/index.html",
			"settings":
			{
				"buffer_size": 1978,
				"line_ending": "Unix"
			}
		},
		{
			"file": "www/templates/tab-dash.html",
			"settings":
			{
				"buffer_size": 1439,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/css/style.css",
			"settings":
			{
				"buffer_size": 3034,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "angular.module('starter.controllers', ['starter.services', 'ngOpenFB'])\n\n.controller(\"AppCtrl\", function($scope) {\n  \n  \n})\n\n\n.controller(\"LoginCtrl\", function($scope) {\n\n  console.log(\"assets\")\n  $scope.logoSrc = '/img/mob-logo.png';\n  $scope.bgSrc = '/img/mob-background.png';\n  $scope.descTxt = \"Find the service people\";\n  $scope.loginTxt = \"Login\";\n  \n/*\n  if (window.matchMedia(\"(min-width: 400px)\").matches) {\n    $scope.logoSrc = '/img/mob-logo.png';\n} else {\n    $scope.logoSrc = '/img/mob-logox.png';\n}\n  */\n  \n})\n\n.controller('AppController', function($scope, $ionicSideMenuDelegate) {\n\n  console.log(\"menu\");\n\n  $scope.toggleLeft = function() {\n    $ionicSideMenuDelegate.toggleLeft();\n  };\n\n\n\n\n})\n\n.controller('NavController', function($scope, $ionicSideMenuDelegate) {\n      $scope.toggleLeft = function() {\n        $ionicSideMenuDelegate.toggleLeft();\n      };\n    })\n\n\n.controller('TabCtrl', function($scope,  $state){\n\n\n   \n\n   $scope.gotoHome = function() {\n    console.log('logout');\n     $state.go('home', {url: 'templates/landing.html'})\n  }\n\n  $scope.gotoDash = function() {\n    console.log('tab > Dash');\n     \n  }\n\n  $scope.gotoList = function() {\n    console.log('tab > List');\n     \n  }\n\n  $scope.gotoSettings = function() {\n    console.log('tab > Settings');\n     \n  }\n})\n\n.controller('DashCtrl', function($scope, $stateParams, ngFB, $state, $ionicModal, $timeout, $state, $ionicSideMenuDelegate) {\n\n  //$scope.session = Session.get({sessionId: $stateParams.sessionId});\n //$scope.$root.tabsHidden = \"tabs-hide\";\n/*\n scope.gotoHome = function() {\n   console.log(\"tab > Home\")\n   //$state.go('tab.chats');\n   $state.go('/', {url: 'templates/landing.html'})\n  \n  };\n  */\n\n\n\n  $scope.toggleLeftSideMenu = function() {\n    $ionicSideMenuDelegate.toggleLeft();\n  };\n\n// Create the login modal that we will use later\n  $ionicModal.fromTemplateUrl('templates/menu.html', {\n    scope: $scope\n  }).then(function(modal) {\n    $scope.modal = modal;\n  });\n\n  // Triggered in the login modal to close it\n  $scope.closeLogin = function() {\n    $scope.modal.hide();\n  };\n\n  // Open the login modal\n  $scope.login = function() {\n    $scope.modal.show();\n  };\n/* \n$scope.toggleProjects = function() {\n    $ionicSideMenuDelegate.toggleLeft();\n  };*/\n\n  // Perform the login action when the user submits the login form\n  /*\n  $scope.doLogin = function() {\n    console.log('Doing login', $scope.loginData);\n\n    // Simulate a login delay. Remove this and replace with your login\n    // code if using a login system\n    $timeout(function() {\n      $scope.closeLogin();\n    }, 1000);\n  };\n*/\n \n  $scope.fbLogin = function () {\n    ngFB.login({scope: 'public_profile, email, user_friends'}).then(\n        function (response) {\n            if (response.status === 'connected') {\n                console.log('Facebook login succeeded');\n                $scope.closeLogin();\n            } else {\n                alert('Facebook login failed');\n            }\n        });\n};\n})\n\n\n.controller('ChatsCtrl', function($scope, Chats) {\n  // With the new view caching in Ionic, Controllers are only called\n  // when they are recreated or on app start, instead of every page change.\n  // To listen for when this page is active (for example, to refresh data),\n  // listen for the $ionicView.enter event:\n  //\n  //$scope.$on('$ionicView.enter', function(e) {\n  //});\n\n  $scope.chats = Chats.all();\n  $scope.remove = function(chat) {\n    Chats.remove(chat);\n  };\n})\n\n.controller('ChatDetailCtrl', function($scope, $stateParams, Chats) {\n  $scope.chat = Chats.get($stateParams.chatId);\n})\n\n.controller('landingCtrl', function($scope, $stateParams, $state) {\n\n// Update app code with new release from Ionic Deploy\n  $scope.doUpdate = function() {\n    deploy.update().then(function(res) {\n      console.log('Ionic Deploy: Update Success! ', res);\n    }, function(err) {\n      console.log('Ionic Deploy: Update error! ', err);\n    }, function(prog) {\n      console.log('Ionic Deploy: Progress... ', prog);\n    });\n  };\n\n\n// Check Ionic Deploy for new code\n  $scope.checkForUpdates = function() {\n    console.log('Ionic Deploy: Checking for updates');\n    deploy.check().then(function(hasUpdate) {\n      console.log('Ionic Deploy: Update available: ' + hasUpdate);\n      $scope.hasUpdate = hasUpdate;\n    }, function(err) {\n      console.error('Ionic Deploy: Unable to check for updates', err);\n    });\n  }\n//var deploy = new Ionic.Deploy();\n\n  \n\n$scope.gotoState = function() {\n   console.log(\"login\")\n   //$state.go('tab.chats');\n   $state.go('tab.dash', {url: 'templates/tab-dash.html'})\n  \n  };\n  \n\n})\n\n\n\n.controller('AccountCtrl', function($scope) {\n  /*ngFB.api({\n        path: '/me',\n        params: {fields: 'id,name'}\n    }).then(\n        function (user) {\n            $scope.user = user;\n        },\n        function (error) {\n            alert('Facebook error: ' + error.error_description);\n        });\n*/\n\n  $scope.settings = {\n    enableFriends: true\n  };\n});\n\n\n\n\n\n",
			"file": "www/js/controllers.js",
			"file_size": 5183,
			"file_write_time": 130914640440000000,
			"settings":
			{
				"buffer_size": 4961,
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/templates/tabs.html",
			"settings":
			{
				"buffer_size": 988,
				"line_ending": "Unix"
			}
		},
		{
			"file": "www/js/app.js",
			"settings":
			{
				"buffer_size": 3537,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/agha.asim/asimkh/apps/Hazzir",
		"/Users/agha.asim/asimkh/apps/Hazzir/www",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/js",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/templates"
	],
	"file_history":
	[
		"/C/Users/A2K/apps/github/apps/Hazzir/www/templates/tab-account.html",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/js/services.js",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/templates/chat-detail.html",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/templates/tab-chats.html",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/js/controllers.js",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/templates/landing.html",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/css/style.css",
		"/C/Users/A2K/apps/github/apps/Hazzir/config.xml",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/index.html",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/js/app.js",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/templates/tabs.html",
		"/C/Users/A2K/apps/github/apps/Hazzir/www/templates/tab-dash.html",
		"/Users/agha.asim/asimkh/apps/Hazzir/config.xml",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/js/ngopenfb.js",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/js/openfb.js",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/templates/tab-dash.html",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/js/controllers.js",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/js/services.js",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/js/app.js",
		"/Users/agha.asim/asimkh/apps/Hazzir/www/index.html",
		"/Users/agha.asim/Downloads/html5_configurable_example/configurable_example.html",
		"/Volumes/Sites/fw-health/v4/_www/js/scripts.js",
		"/Users/agha.asim/asimkh/go/scr/hazzir/webservice.go",
		"/Users/agha.asim/Hazzir/www/index.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ionSideMenuConten",
			"toggleLeft",
			"ionNavBar",
			"state"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "www/templates/menu.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2826,
						"regions":
						{
						},
						"selection":
						[
							[
								659,
								659
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "www/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1978,
						"regions":
						{
						},
						"selection":
						[
							[
								1453,
								1453
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "www/templates/tab-dash.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1439,
						"regions":
						{
						},
						"selection":
						[
							[
								320,
								320
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "www/css/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3034,
						"regions":
						{
						},
						"selection":
						[
							[
								2102,
								2102
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "www/js/controllers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4961,
						"regions":
						{
						},
						"selection":
						[
							[
								2170,
								2170
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 431.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "www/templates/tabs.html",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 988,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "www/js/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3537,
						"regions":
						{
						},
						"selection":
						[
							[
								857,
								857
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "hazzir.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 225.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
